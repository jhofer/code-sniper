import { app, BrowserWindow, globalShortcut } from "electron";
import AutoLaunch from 'auto-launch';
import Store from "electron-store";

export const store = new Store();
import { registerEventListener } from "./app/eventHandler";
import { registerGlobalShortCuts } from "./app/globalshortcuts";
import { setStorageFolder } from "./app/loadSnips";
import { SAVE_PATH_KEY } from "./constants";
// This allows TypeScript to pick up the magic constant that's auto-generated by Forge's Webpack
// plugin that tells the Electron app where to look for the Webpack-bundled app code (depending on
// whether you're running in development or production).
declare const MAIN_WINDOW_WEBPACK_ENTRY: string;

// Handle creating/removing shortcuts on Windows when installing/uninstalling.
if (require("electron-squirrel-startup")) {
  // eslint-disable-line global-require
  app.quit();
}
export const windowContainer: { win: BrowserWindow } = {
  win: null,
};
const createWindow = (): void => {
  // Create the browser window.
  const mainWindow = new BrowserWindow({
    frame: false,
    autoHideMenuBar: true,
    movable: false,
    resizable: false,
    fullscreenable: false,
    center: true,
    height: 800,
    width: 800,
    webPreferences: {
      nodeIntegration: true,
      contextIsolation: false,
    },
  });
  windowContainer.win = mainWindow;
  // and load the index.html of the app.
  mainWindow.loadURL(MAIN_WINDOW_WEBPACK_ENTRY);

  // Open the DevTools.
  //mainWindow.webContents.openDevTools();

  registerGlobalShortCuts(mainWindow);
  registerEventListener(mainWindow);
  mainWindow.on("blur", () =>{
     const path = store.get(SAVE_PATH_KEY);
     if(path){
       mainWindow.hide()
     }
    });
  mainWindow.on("show", () => {
    setTimeout(() => {
      mainWindow.focus();
    }, 200);
  });
  mainWindow.hide();
  mainWindow.minimize();


  let autoLaunch = new AutoLaunch({
    name: 'Code-Sniper',
    path: app.getPath('exe'),
  });
  autoLaunch.isEnabled().then((isEnabled) => {
    if (!isEnabled) autoLaunch.enable();
  });

};

// This method will be called when Electron has finished
// initialization and is ready to create browser windows.
// Some APIs can only be used after this event occurs.
app.on("ready", createWindow);

// Quit when all windows are closed, except on macOS. There, it's common
// for applications and their menu bar to stay active until the user quits
// explicitly with Cmd + Q.
app.on("window-all-closed", () => {
  if (process.platform !== "darwin") {
    app.quit();
  }
});

app.on("activate", () => {
  // On OS X it's common to re-create a window in the app when the
  // dock icon is clicked and there are no other windows open.
  if (BrowserWindow.getAllWindows().length === 0) {
    createWindow();
  }
});

app.on("will-quit", () => {
  // Unregister allJ shortcuts.
  globalShortcut.unregisterAll();
});

app.on("before-quit", () => {
  console.log("before-quit");
  windowContainer.win.removeAllListeners("close");
  globalShortcut.unregisterAll();
  windowContainer.win.close();
});

// In this file you can include the rest of your app's specific main process
// code. You can also put them in separate files and import them here.
